source("~/.active-rstudio-document", echo=TRUE)
df <- get_stats()
View(df)
?containts
#| echo: true
#| df <- get_stats() |>
#|       filter(!grepl('LIS', survey_acronym))
#|
#| filter(reporting_level=="national" & year>=1990) |> select(year,headcount,comparable_spell,welfare_type) print(df, n = 21)
df <- get_stats() |> filter(!grepl('LIS', survey_acronym))
View(df)
df <- get_stats() |> filter(!grepl('LIS', survey_acronym))
df <- get_stats() |> filter(grepl('LIS', survey_acronym))
View(df)
df <- get_stats() |> filter(grepl("LIS", survey_acronym)) |>  group(country_name) |>  summarize(count = n()) |> ungroup()
df <- get_stats() |> filter(grepl("LIS", survey_acronym)) |>  group_by(country_name) |>  summarize(count = n()) |> ungroup()
View(df)
df <- get_stats() |> filter(grepl('LIS', survey_acronym))
View(df)
df <- get_stats() |>
filter(grepl("LIS", survey_acronym)) |>
group_by(country_name) |>
summarize(count = n()) |>
ungroup()
#| echo: true
# Kuznets curve?
df <- get_stats()
library(pipr)
df <- get_stats()
summary(lm(gini~log(mean)+I(log(mean)^2),data=df))
summary(lm(gini~log(mean)+log(mean)^2,data=df))
summary(lm(gini~lpoly(log(mean),2),data=df))
#| echo: true
# Change in number of poor, 2019-2020
df <- get_wb() |> filter(year==2019 | year==2020) |>
group_by(region_code) |>
mutate(changeinpoor = pop_in_poverty-lag(pop_in_poverty)) |>
filter(!is.na(changeinpoor))
library(dplyr)
#| echo: true
# Change in number of poor, 2019-2020
df <- get_wb() |> filter(year==2019 | year==2020) |>
group_by(region_code) |>
mutate(changeinpoor = pop_in_poverty-lag(pop_in_poverty)) |>
filter(!is.na(changeinpoor))
gr <- ggplot(df, aes(x = region_name,y=changeinpoor/10^6)) +
geom_col(stat="identity") +
labs(title = "Change in number of poor, 2019-2020",y = "Milllions",x = "Region")
library(ggplot2)
gr <- ggplot(df, aes(x = region_name,y=changeinpoor/10^6)) +
geom_col(stat="identity") +
labs(title = "Change in number of poor, 2019-2020",y = "Milllions",x = "Region")
gr <- ggplot(df, aes(x = region_name,y=changeinpoor/10^6)) +
geom_bar(stat="identity") +
labs(title = "Change in number of poor, 2019-2020",y = "Milllions",x = "Region")
gr
gr <- ggplot(df, aes(x = region_name,y=changeinpoor/10^6)) +
geom_col(stat="identity") +
labs(title = "Change in number of poor, 2019-2020",y = "Milllions",x = "Region")
gr
gr <- ggplot(df, aes(y = region_name,x=changeinpoor/10^6)) +
geom_bar(stat="identity") +
labs(title = "Change in number of poor, 2019-2020",y = "Milllions",x = "Region")
gr
#| echo: true
# Change in Gini, 2019-2020?=
df <- get_stats() |>
filter(year==2019 | year==2020) |>
filter(reporting_level=="national")
View(df)
gr <- ggplot(df[df$country_code!="XKX",], aes(x = reorder(country_name, +ginichange),y=ginichange*100,fill=region_name)) +
geom_bar(stat="identity") +
labs(title = "Change in Gini index, 2019-2020",y = "Gini points",x = "Country") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
#| echo: true
# Change in Gini, 2019-2020?=
df <- get_stats() |>
filter(year==2019 | year==2020) |>
filter(reporting_level=="national") |>
group_by(country_code,welfare_type,comparable_spell) |>
# Only keeps countries with comparable estimates in 2019 and 2020
filter(n()==2) |>
mutate(ginichange = gini-lag(gini)) |>
filter(year==2020)
gr <- ggplot(df[df$country_code!="XKX",], aes(x = reorder(country_name, +ginichange),y=ginichange*100,fill=region_name)) +
geom_bar(stat="identity") +
labs(title = "Change in Gini index, 2019-2020",y = "Gini points",x = "Country") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
gr
View(df)
#| echo: true
# Change in Gini, 2019-2020?=
df <- get_stats() |>
filter(year==2019 | year==2020) |>
filter(reporting_level=="national") |>
group_by(country_code,welfare_type,comparable_spell) |>
# Only keeps countries with comparable estimates in 2019 and 2020
filter(n()==2) |>
mutate(ginichange = gini-lag(gini)) |>
filter(year==2020)
#| echo: true
# Change in Gini, 2019-2020?=
df <- get_stats() |>
filter(year==2019 | year==2020) |>
filter(reporting_level=="national") |>
group_by(country_code,welfare_type,comparable_spell) |>
# Only keeps countries with comparable estimates in 2019 and 2020
filter(n()==2) |>
mutate(ginichange = gini-lag(gini)) |>
filter(year==2020) |>
# If countries have both income and consumption estimates, use only the latter
filter(n()==1 | welfare_type=="consumption")
#| echo: true
# Change in Gini, 2019-2020?=
df <- get_stats() |>
filter(year==2019 | year==2020) |>
filter(reporting_level=="national") |>
group_by(country_code,welfare_type,comparable_spell) |>
# Only keeps countries with comparable estimates in 2019 and 2020
filter(n()==2) |>
mutate(ginichange = gini-lag(gini)) |>
filter(year==2020) |>
ungroup() |>
# If countries have both income and consumption estimates, use only the latter
group_by(code) |>
filter(n()==1 | welfare_type=="consumption") |>
ungroup()
#| echo: true
# Change in Gini, 2019-2020?=
df <- get_stats() |>
filter(year==2019 | year==2020) |>
filter(reporting_level=="national") |>
group_by(country_code,welfare_type,comparable_spell) |>
# Only keeps countries with comparable estimates in 2019 and 2020
filter(n()==2) |>
mutate(ginichange = gini-lag(gini)) |>
filter(year==2020) |>
ungroup() |>
# If countries have both income and consumption estimates, use only the latter
group_by(country_code) |>
filter(n()==1 | welfare_type=="consumption") |>
ungroup()
gr <- ggplot(df[df$country_code!="XKX",], aes(x = reorder(country_name, +ginichange),y=ginichange*100,fill=region_name)) +
geom_bar(stat="identity") +
labs(title = "Change in Gini index, 2019-2020",y = "Gini points",x = "Country") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
br
gr
df <- get_stats()
View(df)
# To install the pipr package, you first need to install the devtools package
install.packages("devtools")
install.packages("devtools")
# The devtools package allows you to install pipr through GitHub
devtools::install_github("worldbank/pipr")
# Now load pipr
library(pipr)
# We'll use dplyr a lot in these slides, so best to load it as well
library(dplyr)
### Country-level estimates ###
get_stats()
### Variable information ###
get_aux("dictionary")
### Ghanaian estimates ###
get_stats(country = "GHA") |>
select(country_code, year, poverty_line, headcount,mean,gini)
### Different poverty line ###
get_stats(country = "LUX", povline = 10)  |>
select(country_code, year, poverty_line, headcount)
### Multiple poverty liens ###
povlines <- c(10, 20, 50,100)
purrr::map_dfr(.x      = povlines,
.f      = get_stats,
country = "LUX",
year    = 2022) |>
select(country_code, year, poverty_line, headcount)
### Estimates across selected countries ###
get_stats(country = c("LUX","GHA","VNM"), year=2022) |>
select(country_code, year, poverty_line, headcount, mean, gini)
### Interpolated and extrapolated values ###
get_stats(country = "GHA", fill_gaps = TRUE)  |>
filter(year>=2016) |>
select(country_code, year, poverty_line, headcount)
### Poverty by welfare type ###
df <- get_stats(country="PHL")
gr <- ggplot(df,aes(y=100*headcount,x=year,color=welfare_type)) +
geom_line() +
labs(
title = "Extreme poverty in the Philippines, 1981-2022",
y = "Poverty rate (%)",
x = ""
)
library(ggplot)
library(ggplot)
gr <- ggplot(df,aes(y=100*headcount,x=year,color=welfare_type)) +
geom_line() +
labs(
title = "Extreme poverty in the Philippines, 1981-2022",
y = "Poverty rate (%)",
x = ""
)
library(ggplot2)
gr <- ggplot(df,aes(y=100*headcount,x=year,color=welfare_type)) +
geom_line() +
labs(
title = "Extreme poverty in the Philippines, 1981-2022",
y = "Poverty rate (%)",
x = ""
)
gr
### Poverty by reporting level ###
df <- get_stats(country="CHN") |>
filter(year>=1990)
gr <- ggplot(df,aes(y=100*headcount,x=year,color=reporting_level)) +
geom_line() +
labs(
title = "Extreme poverty in China, 1990-2022",
y = "Poverty rate (%)",
x = "")
gr
### Within-country comparability ###
df <- get_stats(country="CHN") |>
filter(reporting_level=="national" & year>=1990) |>
select(year,headcount,comparable_spell,welfare_type)
print(df, n = 21)
### Data from LIS ###
df <- get_stats() |>
filter(grepl("LIS", survey_acronym)) |>
group_by(country_name) |>
summarize(obs = n()) |>
ungroup()
print(df, n=29)
### Global and regional estimates ###
get_wb()
### Global poverty, 1990-2022 ###
df <- get_wb() |>
filter(year >= 1990, region_code %in% c("WLD","EAP","SSA"))
gr <- ggplot(df, aes(x = year,y = 100*headcount,color=region_code)) +
geom_line() +
labs(
title = "Global poverty, 1990-2025",
y = "Poverty rate (%)",
x = ""
)
